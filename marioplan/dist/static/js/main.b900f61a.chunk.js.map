{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b900f61a.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/create'>New Project</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink></li>      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n  \n      firebase.auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n      ).then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'LOGIN_ERROR', err });\n      });\n  \n    }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n} ","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks ","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\n\nimport { connect } from 'react-redux'\n\n\nconst Navbar = (props) => {\n  const { auth,profile } = props;\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n      <span className=\"card-title \">{project.title}</span>\n      <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n      <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\n\nconst ProjectList =({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n          { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n      </div>\n  )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n          <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n          <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    //projects: state.project.projects\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\n\n\nconst ProjectDetails = (props) => {\n  /*const id = props.match.params.id;\n  return (\n    <div className=\"container section project-details\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Project title - { id }</span>\n          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Et labore quaerat quibusdam vel saepe, ab voluptate accusantium culpa nemo fuga earum? Soluta amet nobis officia sed neque fuga aperiam quia?</p>\n        </div>\n        <div className=\"card-action grey lighten-4 grey-text\">\n          <div>Posted by The Net Ninja</div>\n          <div>2nd September, 2am</div>*/\n          const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signin' />\n          if (project) {\n            return (\n              <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                  <div className=\"card-content\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>{project.content}</p>s\n                  </div>\n                  <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\n\n                  </div>\n        </div>\n      </div>\n     )\n    } else {\n      return (\n        <div className=\"container center\">\n          <p>Loading project...</p>\n        </div>\n      )\n    }\n  }\n  \n  const mapStateToProps = (state, ownProps) => {\n    // console.log(state);\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n      project: project,\n    auth: state.firebase.auth\n    }\n  }\n\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    // console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","\n  export const createProject = (project) => {\n    return (dispatch, getState, {getFirestore}) => {\n      // make async call to database\n\n      const firestore = getFirestore();\n      const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state\n  }\n};\n\nexport default authReducer; ","/*const initState = {\n    projects: [\n      {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n      {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n      {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n    ]\n  }*/\n\n  const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log('create project success');\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error');\n      return state;\n    default:\n      return state;\n  }\n};\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCz7Sq9m8gZcipb6JmUHXvHnfSGhtdC-rg\",\n    authDomain: \"net-ninja-marioplan-6c67d.firebaseapp.com\",\n    databaseURL: \"https://net-ninja-marioplan-6c67d.firebaseio.com\",\n    projectId: \"net-ninja-marioplan-6c67d\",\n    storageBucket: \"net-ninja-marioplan-6c67d.appspot.com\",\n    messagingSenderId: \"595430312769\",\n    appId: \"1:595430312769:web:3b4c008fcdd337dcf86fc0\",\n    measurementId: \"G-8X2DBD6PJH\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  //firebase.analytics();\n  //firebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import serviceWorker from './serviceWorker';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    //reactReduxFirebase(fbConfig) // redux binding for firebase // redux bindings for firestore\n    //reactReduxFirebase(fbConfig, {attachAuthIsReady: true})\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n  )\n);\n\n\n\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));\n    serviceWorker.unregister();  \n});\n\n"],"sourceRoot":""}